/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PrawnSeed as PrismaPrawnSeed } from "@prisma/client";

export class PrawnSeedServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PrawnSeedCountArgs, "select">
  ): Promise<number> {
    return this.prisma.prawnSeed.count(args);
  }

  async prawnSeeds(
    args: Prisma.PrawnSeedFindManyArgs
  ): Promise<PrismaPrawnSeed[]> {
    return this.prisma.prawnSeed.findMany(args);
  }
  async prawnSeed(
    args: Prisma.PrawnSeedFindUniqueArgs
  ): Promise<PrismaPrawnSeed | null> {
    return this.prisma.prawnSeed.findUnique(args);
  }
  async createPrawnSeed(
    args: Prisma.PrawnSeedCreateArgs
  ): Promise<PrismaPrawnSeed> {
    return this.prisma.prawnSeed.create(args);
  }
  async updatePrawnSeed(
    args: Prisma.PrawnSeedUpdateArgs
  ): Promise<PrismaPrawnSeed> {
    return this.prisma.prawnSeed.update(args);
  }
  async deletePrawnSeed(
    args: Prisma.PrawnSeedDeleteArgs
  ): Promise<PrismaPrawnSeed> {
    return this.prisma.prawnSeed.delete(args);
  }
}
